/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.startProject.presentacion;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import mx.itson.startProject.entidades.Prestamo;
import mx.itson.startProject.entidades.Ruta;
import mx.itson.startProject.entidades.Socio;
import mx.itson.startProject.entidades.SocioPeriodo;
import mx.itson.startProject.persistencia.PeriodoPersistencia;
import mx.itson.startProject.persistencia.PrestamoPersistencia;
import mx.itson.startProject.persistencia.RutaPersistencia;
import mx.itson.startProject.persistencia.SocioPeriodoPersistencia;
import mx.itson.startProject.persistencia.SocioPersistencia;
import static mx.itson.startProject.presentacion.PantallaPrincipal.periodo;
import static mx.itson.startProject.presentacion.PantallaPrincipal.socio;

/**
 *
 * @author Danielrodrigo
 */
public class frmPeriodo extends javax.swing.JFrame {

    public static DefaultTableModel modelo;

    /**
     * Creates new form frmPeriodo
     */
    public frmPeriodo() {
        initComponents();
        tbSocioPeriodo.setBackground(Color.white);
        tbSocioPeriodo.setShowHorizontalLines(false);
        tbSocioPeriodo.setShowVerticalLines(false);
        tbRutas.setBackground(Color.white);
        tbRutas.setShowHorizontalLines(false);
        tbRutas.setShowVerticalLines(false);

        tbRutas.getColumnModel().getColumn(0).setMaxWidth(0);
        tbRutas.getColumnModel().getColumn(0).setMinWidth(0);
        tbRutas.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tbRutas.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        tbSocioPeriodo.getColumnModel().getColumn(0).setMaxWidth(0);
        tbSocioPeriodo.getColumnModel().getColumn(0).setMinWidth(0);
        tbSocioPeriodo.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tbSocioPeriodo.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);

//        tbSocioPeriodo.getColumnModel().getColumn(9).setMaxWidth(0);
//        tbSocioPeriodo.getColumnModel().getColumn(9).setMinWidth(0);
//        tbSocioPeriodo.getTableHeader().getColumnModel().getColumn(9).setMaxWidth(0);
//        tbSocioPeriodo.getTableHeader().getColumnModel().getColumn(9).setMinWidth(0);
        lbPeriodo.setText("(" + PantallaPrincipal.periodo.getFechaInicio() + " _ " + PantallaPrincipal.periodo.getFechaFin() + ")");

        if (periodo.getEstado().equals("En espera")) {
            SocioPeriodoPersistencia spp = new SocioPeriodoPersistencia();
            List<SocioPeriodo> socios = spp.obtenerCapturados(periodo.getId());
            cargarSocios(socios);
        }
    }

    public void cargarSocios(List<SocioPeriodo> socios) {
        SocioPersistencia sps = new SocioPersistencia();
        modelo = (DefaultTableModel) tbSocioPeriodo.getModel();
        modelo.getDataVector().clear();
        for (SocioPeriodo sp : socios) {
            modelo.addRow(new Object[]{
                sp.getSocio().getId(),
                sp.getSocio().getNombre(),
                sp.getRutas(),
                sp.getIngreso(),
                sp.getGastoCombustible(),
                sp.getGastoSeguro(),
                sp.getGastoMantenimiento(),
                sp.getDescuento(),
                sp.getTotal()
            });
            agregarTotal(sp.getTotal());
            sp.getSocio().setEstado(true);
            sps.editarSocio(sp.getSocio());
            marcarRutas(sp.getRutas());
        }
    }

    public void marcarRutas(String rutas) {
        RutaPersistencia rp = new RutaPersistencia();
        String[] rutasSeparadas = rutas.split(",");
        for (int i = 0; i < rutasSeparadas.length; i++) {
             Ruta r= new Ruta();
             r= rp.obtenerPorNombre(rutasSeparadas[i]);
             r.setEstado(true);
             rp.editarRuta(r);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnSeleccionarSocioPeriodo = new javax.swing.JButton();
        btnAgregarRutaPeriodo = new javax.swing.JButton();
        txtCombustible = new javax.swing.JTextField();
        txtSeguro = new javax.swing.JTextField();
        txtMantenimiento = new javax.swing.JTextField();
        txtIngresoPeriodo = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnAgregarSocio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbSocioPeriodo = new javax.swing.JTable();
        btnGuardarPeriodo = new javax.swing.JButton();
        lbPeriodo = new javax.swing.JLabel();
        btnQuitarRutaPeriodo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbRutas = new javax.swing.JTable();
        btnCalcularTotal = new javax.swing.JButton();
        lbSocio = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTotalPeriodo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtImpuesto = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        btnCancelarSocio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(3, 169, 244));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Capturar Periodo");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Socio");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 40, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Rutas");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 130, 20));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Ingreso $");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Gastos $");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 100, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Combustible");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, 80, 30));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Seguro");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 80, 30));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Mantenimiento");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 200, 100, 30));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Descuento $");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 100, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Total");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 100, -1, -1));

        btnSeleccionarSocioPeriodo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSeleccionarSocioPeriodo.setForeground(new java.awt.Color(255, 255, 255));
        btnSeleccionarSocioPeriodo.setText("Seleccionar");
        btnSeleccionarSocioPeriodo.setToolTipText("Seleccionar un socio");
        btnSeleccionarSocioPeriodo.setBorder(null);
        btnSeleccionarSocioPeriodo.setContentAreaFilled(false);
        btnSeleccionarSocioPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarSocioPeriodoActionPerformed(evt);
            }
        });
        jPanel1.add(btnSeleccionarSocioPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 130, 20));

        btnAgregarRutaPeriodo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAgregarRutaPeriodo.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarRutaPeriodo.setText("+");
        btnAgregarRutaPeriodo.setToolTipText("Agregar ruta al socio");
        btnAgregarRutaPeriodo.setBorder(null);
        btnAgregarRutaPeriodo.setContentAreaFilled(false);
        btnAgregarRutaPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarRutaPeriodoActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarRutaPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 40, 20));

        txtCombustible.setText("0.0");
        txtCombustible.setNextFocusableComponent(txtSeguro);
        txtCombustible.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCombustibleFocusGained(evt);
            }
        });
        txtCombustible.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombustibleKeyTyped(evt);
            }
        });
        jPanel1.add(txtCombustible, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 120, 90, 30));

        txtSeguro.setText("0.0");
        txtSeguro.setNextFocusableComponent(txtMantenimiento);
        txtSeguro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSeguroFocusGained(evt);
            }
        });
        txtSeguro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSeguroKeyTyped(evt);
            }
        });
        jPanel1.add(txtSeguro, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, 90, 30));

        txtMantenimiento.setText("0.0");
        txtMantenimiento.setNextFocusableComponent(txtDescuento);
        txtMantenimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMantenimientoFocusGained(evt);
            }
        });
        txtMantenimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMantenimientoKeyTyped(evt);
            }
        });
        jPanel1.add(txtMantenimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 200, 90, 30));

        txtIngresoPeriodo.setText("0.0");
        txtIngresoPeriodo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtIngresoPeriodo.setNextFocusableComponent(txtCombustible);
        txtIngresoPeriodo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIngresoPeriodoFocusGained(evt);
            }
        });
        txtIngresoPeriodo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIngresoPeriodoKeyTyped(evt);
            }
        });
        jPanel1.add(txtIngresoPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 90, 30));

        txtDescuento.setText("0.0");
        txtDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescuentoFocusGained(evt);
            }
        });
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });
        jPanel1.add(txtDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 120, 90, 30));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setText("0.0");
        jPanel1.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 120, 90, 30));

        btnAgregarSocio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAgregarSocio.setText("Agregar");
        btnAgregarSocio.setToolTipText("Agregar datos del socio al periodo");
        btnAgregarSocio.setBorder(null);
        btnAgregarSocio.setContentAreaFilled(false);
        btnAgregarSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarSocioActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 120, 30));

        tbSocioPeriodo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Socio", "Rutas", "Ingreso", "Gasto Combustible", "Gasto Seguro", "Gasto Mantenimiento", "Descuento", "Total", "idRutas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSocioPeriodo.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbSocioPeriodo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 1160, 240));

        btnGuardarPeriodo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnGuardarPeriodo.setText("Guardar ");
        btnGuardarPeriodo.setToolTipText("Guardar datos del periodo");
        btnGuardarPeriodo.setBorder(null);
        btnGuardarPeriodo.setContentAreaFilled(false);
        btnGuardarPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPeriodoActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 110, 30));

        lbPeriodo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbPeriodo.setForeground(new java.awt.Color(255, 255, 255));
        lbPeriodo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPeriodo.setText("jLabel11");
        jPanel1.add(lbPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 220, 20));

        btnQuitarRutaPeriodo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnQuitarRutaPeriodo.setForeground(new java.awt.Color(255, 255, 255));
        btnQuitarRutaPeriodo.setText("-");
        btnQuitarRutaPeriodo.setToolTipText("Qiutar una ruta");
        btnQuitarRutaPeriodo.setBorder(null);
        btnQuitarRutaPeriodo.setContentAreaFilled(false);
        btnQuitarRutaPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarRutaPeriodoActionPerformed(evt);
            }
        });
        jPanel1.add(btnQuitarRutaPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 40, 20));

        tbRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Ruta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbRutas);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 220, 100));

        btnCalcularTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnCalcularTotal.setForeground(new java.awt.Color(255, 255, 255));
        btnCalcularTotal.setText("Calcular Total");
        btnCalcularTotal.setBorder(null);
        btnCalcularTotal.setContentAreaFilled(false);
        btnCalcularTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularTotalActionPerformed(evt);
            }
        });
        jPanel1.add(btnCalcularTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 160, 130, 30));

        lbSocio.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbSocio.setText("Socio");
        jPanel1.add(lbSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 230, 20));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Total: $");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 570, 70, 30));

        txtTotalPeriodo.setEditable(false);
        txtTotalPeriodo.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalPeriodo.setText("0.0");
        jPanel1.add(txtTotalPeriodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 570, 140, 30));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/button_principal.png"))); // NOI18N
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 140, 20));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/button_principal.png"))); // NOI18N
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 40, 20));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/button_principal.png"))); // NOI18N
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 40, 20));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_limit.png"))); // NOI18N
        jLabel13.setText("jLabel13");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 330, 200));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_limit.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 240, 200));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_principal.jpg"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 0, 400, 50));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_principal.jpg"))); // NOI18N
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 50));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_limit.png"))); // NOI18N
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 120, 30));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_limit.png"))); // NOI18N
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 110, 30));
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 590, 160, 50));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/button_principal.png"))); // NOI18N
        jLabel30.setText("jLabel30");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 160, 130, 30));

        txtImpuesto.setText("0.0");
        txtImpuesto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtImpuestoFocusGained(evt);
            }
        });
        txtImpuesto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtImpuestoKeyTyped(evt);
            }
        });
        jPanel1.add(txtImpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 180, 90, 30));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_limit.png"))); // NOI18N
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 60, 330, 200));

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Impuesto");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 160, -1, -1));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/banner_limit.png"))); // NOI18N
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 60, -1, 200));

        btnCancelarSocio.setText("Cancelar");
        btnCancelarSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarSocioActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelarSocio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 110, 30));

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public static Ruta ruta = new Ruta();
    private void btnAgregarRutaPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarRutaPeriodoActionPerformed
        frmRutas rutas = new frmRutas();
        rutas.setVisible(true);
    }//GEN-LAST:event_btnAgregarRutaPeriodoActionPerformed

    public static void evaluarPrestamo(int idSocio) {
        Prestamo p = new Prestamo();
        PrestamoPersistencia pp = new PrestamoPersistencia();
        p = pp.obtenerPorSocio(idSocio);
        if (p == null) {
            txtDescuento.setEnabled(false);
            txtDescuento.setText("0.0");
        } else {
            txtDescuento.setText(String.valueOf(p.getDescuento()));
        }
    }


    private void btnSeleccionarSocioPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarSocioPeriodoActionPerformed
        if (PantallaPrincipal.socio == null) {
            PantallaPrincipal.indicador = 1;
            new frmSocios().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Aún no captura los datos del socio seleccionado");
        }
    }//GEN-LAST:event_btnSeleccionarSocioPeriodoActionPerformed

    public String pasarRutas() {
        modelo = (DefaultTableModel) tbRutas.getModel();
        String rutas = "";
        for (int i = 0; i < tbRutas.getRowCount(); i++) {
            rutas += tbRutas.getValueAt(i, 1) + ",";
        }
        return rutas;
    }

    public String pasarIdRutas() {
        modelo = (DefaultTableModel) tbRutas.getModel();
        String rutas = "";
        for (int i = 0; i < tbRutas.getRowCount(); i++) {
            rutas += tbRutas.getValueAt(i, 0) + ",";
        }
        return rutas;
    }

    public void agregarSocio(SocioPeriodo sp) {
        modelo = (DefaultTableModel) tbSocioPeriodo.getModel();
        modelo.addRow(new Object[]{
            sp.getId(),
            PantallaPrincipal.socio.getNombre(),
            sp.getRutas(),
            sp.getIngreso(),
            sp.getGastoCombustible(),
            sp.getGastoSeguro(),
            sp.getGastoMantenimiento(),
            sp.getDescuento(),
            sp.getTotal(),
            pasarIdRutas()
        });
    }

    public void limpiar() {
        lbSocio.setText("Socio");
        txtCombustible.setText("0.0");
        txtDescuento.setText("0.0");
        txtIngresoPeriodo.setText("0.0");
        txtMantenimiento.setText("0.0");
        txtSeguro.setText("0.0");
        txtTotal.setText("0.0");
        txtImpuesto.setText("0.0");
        txtTotal.setForeground(Color.BLACK);
        txtDescuento.setEnabled(true);
        PantallaPrincipal.socio = null;
        modelo = (DefaultTableModel) tbRutas.getModel();
        for (int i = 0; i < tbRutas.getRowCount(); i++) {
            modelo.removeRow(i);
            i--;
        }
    }

    public boolean verificarSocioPeriodo() {
        return (PantallaPrincipal.socio != null && tbRutas.getRowCount() > 0 && !"".equals(txtIngresoPeriodo.getText())
                && !"".equals(txtCombustible.getText()) && !"".equals(txtSeguro.getText()) && !"".equals(txtMantenimiento.getText())
                && !"".equals(txtDescuento.getText()) && !"".equals(txtTotal.getText())
                && !"".equals(txtImpuesto.getText()));
    }

    private void btnAgregarSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSocioActionPerformed
        if (verificarSocioPeriodo()) {
            int rsp = JOptionPane.showConfirmDialog(btnAgregarSocio, "¿Está seguro de guardar los datos?");
            if (rsp == 0) {
                PrestamoPersistencia pp = new PrestamoPersistencia();
                SocioPeriodo sp = new SocioPeriodo();
                String rutas = pasarRutas();
                sp.setDescuento(Double.parseDouble(txtDescuento.getText()));
                sp.setGastoCombustible(Double.parseDouble(txtCombustible.getText()));
                sp.setGastoMantenimiento(Double.parseDouble(txtMantenimiento.getText()));
                sp.setGastoSeguro(Double.parseDouble(txtSeguro.getText()));
                sp.setId(socio.getId());
                sp.setSocio(socio);
                sp.setPeriodo(periodo);
                sp.setIngreso(Double.parseDouble(txtIngresoPeriodo.getText()));
                sp.setTotal(Double.parseDouble(txtTotal.getText()));
                sp.setRutas(rutas);
                sp.setImpuesto(Double.parseDouble(txtImpuesto.getText()));
                SocioPeriodoPersistencia spp = new SocioPeriodoPersistencia();
                if (sp.getDescuento() > 0) {
                    pp.evaluarDescuento(socio.getId(), sp.getDescuento(), periodo.getId());
                }
                agregarSocio(sp);
                spp.guardar(sp);
                agregarTotal(sp.getTotal());
                limpiar();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Llene todos los campos");
        }

    }//GEN-LAST:event_btnAgregarSocioActionPerformed

    private void btnQuitarRutaPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarRutaPeriodoActionPerformed
        int fila = tbRutas.getSelectedRow();
        modelo = (DefaultTableModel) tbRutas.getModel();
        if (fila != -1) {
            RutaPersistencia rp = new RutaPersistencia();
            rp.desmarcarRuta((int) modelo.getValueAt(fila, 0));
            modelo.removeRow(fila);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una ruta de la lista");
        }
    }//GEN-LAST:event_btnQuitarRutaPeriodoActionPerformed

    
    public boolean verificarCalculo(){
        return (!"".equals(txtIngresoPeriodo.getText())&& !"".equals(txtCombustible.getText())
                && !"".equals(txtSeguro.getText()) && !"".equals(txtMantenimiento.getText())
                && !"".equals(txtDescuento.getText()) && !"".equals(txtTotal.getText())
                && !"".equals(txtImpuesto.getText()));
    }
    public void calcularTotal() {
        DecimalFormat df = new DecimalFormat("00.00");
        double ingreso = Double.parseDouble(txtIngresoPeriodo.getText());
        double descuento = Double.parseDouble(txtDescuento.getText());
        double gastoCombustible = Double.parseDouble(txtCombustible.getText());
        double gastoSeguro = Double.parseDouble(txtSeguro.getText());
        double gastoMantenimiento = Double.parseDouble(txtMantenimiento.getText());
        double impuesto = Double.parseDouble(txtImpuesto.getText());
        PrestamoPersistencia pp = new PrestamoPersistencia();
        Prestamo p = new Prestamo();
        p = pp.obtenerPorSocio(PantallaPrincipal.socio.getId());
        if (p != null) {
            if (p.getResto() < descuento) {
                getToolkit().beep();
                JOptionPane.showMessageDialog(this, "Solo puede hacer un descuento de " + p.getResto() + " o menos");
            } else {
                double total = ingreso - (descuento + gastoCombustible + gastoMantenimiento + gastoSeguro + impuesto);
                txtTotal.setText(String.valueOf(df.format(total)));
                if (total < 0) {
                    JOptionPane.showMessageDialog(this, "Hay pérdidas para el socio");
                    txtTotal.setForeground(Color.red);
                }else txtTotal.setForeground(Color.BLACK);
            }
        } else {
            if (descuento != (double) 0.0) {
                JOptionPane.showMessageDialog(this, "El socio no cuenta con un préstamo activo");
            } else {
                double total = ingreso - (descuento + gastoCombustible + gastoMantenimiento + gastoSeguro + impuesto);
                txtTotal.setText(String.valueOf(df.format(total)));
                if (total < 0) {
                    txtTotal.setForeground(Color.red);
                    JOptionPane.showMessageDialog(this, "El socio no generó utilidades");
                }else txtTotal.setForeground(Color.BLACK);
            }
        }

    }

    private void btnCalcularTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularTotalActionPerformed
        if(verificarCalculo()){
            calcularTotal();
        }else{
            JOptionPane.showMessageDialog(this, "Llene todos los campos");
        }
        
    }//GEN-LAST:event_btnCalcularTotalActionPerformed

    public void desmarcarRutas(String ids) {
        String id[] = ids.split(",");
        RutaPersistencia rp = new RutaPersistencia();
        for (int i = 0; i < id.length; i++) {
            rp.desmarcarRuta(Integer.parseInt(id[i]));
        }
    }

    public void agregarTotal(double total) {
        DecimalFormat df = new DecimalFormat("00.00");
        double subtotal=Double.parseDouble(txtTotalPeriodo.getText());
        total=subtotal +total;
        txtTotalPeriodo.setText(String.valueOf(df.format(total)));
    }

    public void descontarTotal(double cantidad) {
        DecimalFormat df = new DecimalFormat("00.00");
        double total = Double.parseDouble(txtTotalPeriodo.getText());
        total -= cantidad;
        txtTotalPeriodo.setText(String.valueOf(df.format(total)));
    }

    private void btnGuardarPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPeriodoActionPerformed
        if(tbSocioPeriodo.getRowCount()>0){
            Object[] options = {"CERRAR", "PAUSAR"};
        int rsp = JOptionPane.showOptionDialog(null, "¿Qué desea hacer con la captura del periodo?", "Captura",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        PeriodoPersistencia pp = new PeriodoPersistencia();
        if (rsp == 0) {
            periodo.setEstado("Capturado");
            periodo.setTotal(Double.parseDouble(txtTotalPeriodo.getText()));
        }
        if (rsp == 1) {
            periodo.setEstado("En espera");
        }
        pp.cambiarEstado(periodo);
        PantallaPrincipal.cargarPeriodos(pp.obtenerTodos());
        SocioPersistencia sp = new SocioPersistencia();
        sp.desmarcarTodos();
        RutaPersistencia rp = new RutaPersistencia();
        rp.desmarcarTodas();
        this.dispose();
        }else{
            JOptionPane.showMessageDialog(this, "No hay nada para guardar");
        }
        
    }//GEN-LAST:event_btnGuardarPeriodoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(tbSocioPeriodo.getRowCount()>0){
            JOptionPane.showMessageDialog(this, "Aún no guarda los datos");
        }else{
            int rsp = JOptionPane.showConfirmDialog(this, "¿Está seguro de salir?");
            if(rsp==0){
                RutaPersistencia rp = new RutaPersistencia();
                SocioPersistencia sp = new SocioPersistencia();
                rp.desmarcarTodas();
                sp.desmarcarTodos();
                socio= null;
                this.dispose();
            }
        }
        
    }//GEN-LAST:event_formWindowClosing

    public void soloNumeros(char c, KeyEvent evt, JTextField txt) {
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE) && (c != '.') && !Character.isISOControl(c)) {
            JOptionPane.showMessageDialog(txt, "Solo puede ingresar números");
            evt.consume();
        }
        if (c == '.' && txt.getText().contains(".")) {
            evt.consume();
        }
    }


    private void txtIngresoPeriodoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIngresoPeriodoKeyTyped
        char c = evt.getKeyChar();
        soloNumeros(c, evt, txtIngresoPeriodo);

    }//GEN-LAST:event_txtIngresoPeriodoKeyTyped

    private void txtCombustibleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombustibleKeyTyped
        char c = evt.getKeyChar();
        soloNumeros(c, evt, txtCombustible);
    }//GEN-LAST:event_txtCombustibleKeyTyped

    private void txtSeguroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeguroKeyTyped
        char c = evt.getKeyChar();
        soloNumeros(c, evt, txtSeguro);
    }//GEN-LAST:event_txtSeguroKeyTyped

    private void txtMantenimientoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMantenimientoKeyTyped
        char c = evt.getKeyChar();
        soloNumeros(c, evt, txtMantenimiento);

    }//GEN-LAST:event_txtMantenimientoKeyTyped

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        char c = evt.getKeyChar();
        soloNumeros(c, evt, txtDescuento);
    }//GEN-LAST:event_txtDescuentoKeyTyped

    public void limpiarText(JTextField txt) {
        if (txt.getText().equals("0.0")) {
            txt.setText("");
        }
    }

    private void txtIngresoPeriodoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIngresoPeriodoFocusGained
        limpiarText(txtIngresoPeriodo);
    }//GEN-LAST:event_txtIngresoPeriodoFocusGained

    private void txtCombustibleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCombustibleFocusGained
        limpiarText(txtCombustible);
    }//GEN-LAST:event_txtCombustibleFocusGained

    private void txtSeguroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSeguroFocusGained
        limpiarText(txtSeguro);
    }//GEN-LAST:event_txtSeguroFocusGained

    private void txtMantenimientoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMantenimientoFocusGained
        limpiarText(txtMantenimiento);
    }//GEN-LAST:event_txtMantenimientoFocusGained

    private void txtDescuentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescuentoFocusGained
        limpiarText(txtDescuento);
    }//GEN-LAST:event_txtDescuentoFocusGained

    private void btnCancelarSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarSocioActionPerformed
        String rutas = pasarIdRutas();
        SocioPersistencia sp = new SocioPersistencia();
        if(tbRutas.getRowCount()>0){
            desmarcarRutas(rutas);
        }
        sp.desmarcarSocio(socio.getId());
        limpiar();
    }//GEN-LAST:event_btnCancelarSocioActionPerformed

    private void txtImpuestoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtImpuestoFocusGained
        limpiarText(txtImpuesto);
    }//GEN-LAST:event_txtImpuestoFocusGained

    private void txtImpuestoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImpuestoKeyTyped
       char c = evt.getKeyChar();
        soloNumeros(c, evt, txtImpuesto);  
    }//GEN-LAST:event_txtImpuestoKeyTyped

    public void cargarRutas(String rutas, String id) {
        modelo = (DefaultTableModel) tbRutas.getModel();
        String[] r = rutas.split(",");
        String[] ids = id.split(",");

        for (int i = 0; i < r.length; i++) {
            modelo.addRow(new Object[]{
                Integer.parseInt(ids[i]),
                r[i]
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPeriodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPeriodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPeriodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPeriodo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPeriodo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarRutaPeriodo;
    private javax.swing.JButton btnAgregarSocio;
    private javax.swing.JButton btnCalcularTotal;
    private javax.swing.JButton btnCancelarSocio;
    private javax.swing.JButton btnGuardarPeriodo;
    private javax.swing.JButton btnQuitarRutaPeriodo;
    public static javax.swing.JButton btnSeleccionarSocioPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbPeriodo;
    public static javax.swing.JLabel lbSocio;
    public static javax.swing.JTable tbRutas;
    private javax.swing.JTable tbSocioPeriodo;
    private javax.swing.JTextField txtCombustible;
    public static javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtImpuesto;
    private javax.swing.JTextField txtIngresoPeriodo;
    private javax.swing.JTextField txtMantenimiento;
    private javax.swing.JTextField txtSeguro;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalPeriodo;
    // End of variables declaration//GEN-END:variables
}
